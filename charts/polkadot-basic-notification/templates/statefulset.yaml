apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "polkadot-basic-notification.fullname" . }}
  labels:
    {{- include "polkadot-basic-notification.labels" . | nindent 4 }}
  annotations:
    checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    {{- if (not .Values.config.secret.existingSecret) }}
    checksum/secret: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    {{- end }}
spec:
  replicas: {{ len .Values.config.configFiles }}
  podManagementPolicy: {{ .Values.podManagementPolicy | quote }}
  selector:
    matchLabels:
      {{- include "polkadot-basic-notification.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "polkadot-basic-notification.fullname" . }}
  {{- if .Values.updateStrategy }}
  updateStrategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "polkadot-basic-notification.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "polkadot-basic-notification.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh"]
          args:
            - -c
            - |
              set -eu
              node build/index.js -c /config/config-${HOSTNAME##*-}.yaml
          env:
          {{- range $key, $value := .Values.env }}
            - name: "{{ $key }}"
              value: "{{ $value }}"
          {{- end }}
          envFrom:
            - secretRef:
                {{- if (not .Values.config.secret.existingSecret) }}
                name: {{ include "polkadot-basic-notification.fullname" . }}
                {{- else }}
                name: {{ .Values.config.secret.existingSecret }}
                {{- end }}
          {{- with .Values.envFrom }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
# TODO add livenessProbe in paritytech/polkadot-basic-notification image
#          livenessProbe:
#            httpGet:
#              path: /health
#              port: http
#            initialDelaySeconds: 5
#          readinessProbe:
#            httpGet:
#              path: /ready
#              port: http
#            initialDelaySeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: config
            mountPath: "/config"
            readOnly: true
      volumes:
      - name: config
        configMap:
          name: {{ include "polkadot-basic-notification.fullname" . }}
          items:
          {{- range $index := until (len .Values.config.configFiles ) }}
          - key: "configFile-{{ $index }}"
            path: "config-{{ $index }}.yaml"
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
