# -- Global Docker image parameters
global:
  # -- Docker image registry
  imageRegistry: ""
  # E.g.
  # imagePullSecrets:
  #   - myRegistryKeySecretName
  # -- Docker registry secret names as an array
  imagePullSecrets: []

# -- Override Kubernetes version
kubeVersion: ""
# -- Provide a name in place of node for `app:` labels
nameOverride: ""
# -- Provide a name to substitute for the full names of resources
fullnameOverride: ""
# -- Override namespace where the chart is deployed
namespaceOverride: ""
# -- Labels to add to all deployed objects
commonLabels: {}
# -- Annotations to add to all deployed objects
commonAnnotations: {}
# -- Kubernetes cluster domain name
clusterDomain: cluster.local
# -- Array of extra objects to deploy with the release
extraDeploy: []

# -- Enable diagnostic mode in the deployment
diagnosticMode:
  # -- Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  enabled: false
  # -- Command to override all containers in the deployment
  command:
    - sleep
  # -- Args to override all containers in the deployment
  args:
    - infinity

# -- staking-miner Parameters
stakingMiner:
  # -- A config for staking miner. Parameter is parsed as a JSON string containing a list of dicts. A number of dicts must match the number of replicas. Each dict may contain a 'seed' and 'uri' keys. Its values matches the SEED and URI environment variables as defined in staking-miner.
  config: '[{"seed":"0x44","uri":"ws://localhost:443"}]'
  # -- A name of the existing secret with staking-miner's config. Must be a JSON encoded string that matches stakingMiner.config's format. See secrets.yaml
  existingSecret: ""
  # -- Prometheus exporter configuration
  prometheus:
    # -- Enable exposing the Prometheus port
    enabled: false
    # -- Set the Prometheus port
    port: 9999

# -- Parameters for init container that generates config for staking-miner
generateConfig:
  # -- Image configuration
  image:
    # -- init-container image registry
    registry: docker.io
    # -- init-container image repository
    repository: paritytech/tools
    # -- init-container image tag
    tag: latest
    # -- Specify a imagePullPolicy
    # Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    # ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    pullPolicy: IfNotPresent
    # -- Optionally specify an array of imagePullSecrets.
    # Secrets must be manually created in the namespace.
    # ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    # e.g:
    # pullSecrets:
    #   - myRegistryKeySecretName
    pullSecrets: []
  # -- init-container requests/limits
  resources: {}


# -- waitRuntimeUpgrade configuration
waitRuntimeUpgrade:
  # -- Wait until chain will have same spec version as staking miner
  enabled: false
  # -- Resources configuration for the wait container
  resources: {}


# -- Parity staking-miner image
# ref: https://hub.docker.com/r/paritytech/staking-miner/tags/
image:
  # -- staking-miner image registry
  registry: docker.io
  # -- staking-miner image repository
  repository: paritytech/staking-miner
  # -- staking-miner image tag (immutable tags are recommended)
  tag: master
  # -- Specify a imagePullPolicy
  # Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  # ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  pullPolicy: IfNotPresent
  # -- Optionally specify an array of imagePullSecrets.
  # Secrets must be manually created in the namespace.
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  # e.g:
  # pullSecrets:
  #   - myRegistryKeySecretName
  pullSecrets: []
# -- Number of staking-miner replicas to deploy
replicaCount: 1
# -- Custom livenessProbe that overrides the default one
customLivenessProbe: {}
# -- Custom readinessProbe that overrides the default one
customReadinessProbe: {}
# -- Custom startupProbe that overrides the default one
customStartupProbe: {}
# -- staking-miner resource requests and limits
# ref: http://kubernetes.io/docs/user-guide/compute-resources/
resources:
  # -- The resources limits for the staking-miner containers
  limits: {}
  # -- The requested resources for the staking-miner containers
  requests: {}
# -- Configure Pods Security Context
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
podSecurityContext:
  # -- Enable staking-miner pods' Security Context
  enabled: true
  # -- Set staking-miner pods' Security Context fsGroup
  fsGroup: 1001
# -- Configure Container Security Context
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
containerSecurityContext:
  # -- Enable staking-miner containers' Security Context
  enabled: true
  # -- Set staking-miner containers' Security Context runAsUser
  runAsUser: 1001
  # -- Set staking-miner containers' Security Context runAsNonRoot
  runAsNonRoot: true
  # -- Set staking-miner containers' Security Context readOnlyRootFilesystem
  readOnlyRootFilesystem: false

# -- Override default container command (useful when using custom images)
command: ["/bin/sh"]
# -- Override default container args (useful when using custom images)
args:
- -c
- |
  staking-miner monitor --seed-or-path /config/seed --uri $(cat /config/uri) seq-phragmen
# -- staking-miner pods host aliases
# https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
hostAliases: []
# Extra labels for staking-miner pods
# ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}
# -- Annotations for staking-miner pods
# ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# -- Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
podAffinityPreset: ""
# -- Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
# ref: https://kubernetes.io/docs/concepts/schedulinfg-eviction/assign-pod-node/#inter-pod-afinity-and-anti-affinity
podAntiAffinityPreset: soft
# -- Pod Disruption Budget configuration
# ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
pdb:
  # -- Enable/disable a Pod Disruption Budget creation
  create: false
  # -- Minimum number/percentage of pods that should remain scheduled
  minAvailable: 1
  # -- Maximum number/percentage of pods that may be made unavailable
  maxUnavailable: ""
# -- Node affinity preset
# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
nodeAffinityPreset:
  # -- Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  type: ""
  # -- Node label key to match. Ignored if `affinity` is set
  key: ""
  # -- Node label values to match. Ignored if `affinity` is set
  # E.g.
  # values:
  #   - e2e-az1
  #   - e2e-az2
  values: []
# -- Affinity for staking-miner pods assignment
# ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
# NOTE: `podAffinityPreset`, `podAntiAffinityPreset`, and `nodeAffinityPreset` will be ignored when it's set
affinity: {}
# -- Node labels for staking-miner pods assignment
# ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}
# -- Tolerations for staking-miner pods assignment
# ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []
# -- staking-miner statefulset strategy type
# ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
updateStrategy:
  # -- StrategyType
  # Can be set to RollingUpdate or OnDelete
  type: RollingUpdate

# -- Statefulset Pod management policy, it needs to be Parallel to be able to complete the cluster join
# Ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#pod-management-policies
podManagementPolicy: OrderedReady

# -- staking-miner pods' priorityClassName
priorityClassName: ""
# -- Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
# Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
topologySpreadConstraints: {}
# -- Name of the k8s scheduler (other than default) for staking-miner pods
# ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
schedulerName: ""
# -- Seconds a Pod needs to terminate gracefully
# ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
terminationGracePeriodSeconds: ""
# -- lifecycleHooks for the staking-miner container(s) to automate configuration before or after startup
lifecycleHooks: {}
# -- Array with extra environment variables to add to staking-miner nodes
# e.g:
# extraEnvVars:
#   - name: FOO
#     value: "bar"
extraEnvVars: []
# -- Name of existing ConfigMap containing extra env vars for staking-miner nodes
extraEnvVarsCM: ""
# -- Name of existing Secret containing extra env vars for staking-miner nodes
extraEnvVarsSecret: ""
# -- Optionally specify extra list of additional volumes for the staking-miner pod(s)
extraVolumes: []
# -- Optionally specify extra list of additional volumeMounts for the staking-miner container(s)
extraVolumeMounts: []
# -- Add additional sidecar containers to the staking-miner pod(s)
# e.g:
# sidecars:
#   - name: your-image-name
#     image: your-image
#     imagePullPolicy: Always
#     ports:
#       - name: portname
#         containerPort: 1234
sidecars: {}
# -- Add additional init containers to the staking-miner pod(s)
# ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
# e.g:
# initContainers:
#  - name: your-image-name
#    image: your-image
#    imagePullPolicy: Always
#    command: ['sh', '-c', 'echo "hello world"']
initContainers: {}

# @section Other Parameters

# RBAC configuration
rbac:
  # -- Specifies whether RBAC resources should be created
  create: false
  # -- Custom RBAC rules to set
  # e.g:
  # rules:
  #   - apiGroups:
  #       - ""
  #     resources:
  #       - pods
  #     verbs:
  #       - get
  #       - list
  rules: []

# ServiceAccount configuration
serviceAccount:
  # -- Specifies whether a ServiceAccount should be created
  create: true
  # -- The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the common.names.fullname template
  name: ""
  # -- Additional Service Account annotations (evaluated as a template)
  annotations: {}
  # -- Automount service account token for the server service account
  automountServiceAccountToken: true

# ServiceMonitor configuration
serviceMonitor:
  # -- Specifies whether a ServiceMonitor should be created
  enabled: false
  # -- Set the ServiceMonitor annotations
  annotations: {}

  # -- Prometheus endpoints scrape configuration
  endpoint:
    # -- HTTP path to scrape for metrics.
    path: /metrics
    # -- Name of the service port this endpoint refers to
    port: prom
    # -- Interval at which metrics should be scraped
    interval: 1m
    # -- HTTP scheme to use for scraping.
    scheme: http
    # -- Timeout after which the scrape is ended
    scrapeTimeout: 30s
    # -- Chooses the metric’s labels on collisions with target labels.
    honorLabels: true
