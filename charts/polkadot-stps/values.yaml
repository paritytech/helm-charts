# -- Provide a name in place of node for `app:` labels
nameOverride: ""
# -- Provide a name to substitute for the full names of resources
fullnameOverride: ""

# -- Reference to one or more secrets to be used when pulling images.
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# -- Number of replicas to deploy (TPS counter)
replicas: 1

# -- Configuration for TPS counter util
tps:
  # -- Enable TPS counter
  enabled: true
  # -- Image of the TPS counter
  image:
    # -- Image repository
    repository: paritytech/stps-tps
    # -- Image pull policy
    pullPolicy: Always
    # -- Image tag
    tag: rococo-latest
  # -- Whether to subscribe to blocks from genesis or not. For zombienet tests, this should be set to true. When deploying tps in more long-living networks, set this to false (or simply omit it)
  scrapeFromGenesis:
    # -- Enable blocks subscription
    enabled: false
  # -- Whether to monitor relay-chain, or para-chain finality. If set to true, tps will subscribe to CandidateIncluded events on the relaychain node, and scrape Balances Transfer events concurrently with a collator node RPC client
  paraBlockFinality:
    # -- Enable chain finality monitoring
    enabled: true
  # -- Prometheus exporter configuration
  prometheus:
    # -- Enable Prometheus exporter
    enabled: true
    # -- Prometheus exporter port
    port: 65432
  # -- Additional args for the TPS counter CLI
  args: []
    # node-url:
    # or
    # collator-url:
    # validator-url:
    # sender-index:
    # total-sender:
    # chunk-size:
    # num:

# -- Configuration for transaction sender util
sender:
  # -- Enable transaction sender
  enabled: false
  # -- Image of the transaction sender
  image:
    # -- Image repository
    repository: paritytech/stps-sender
    # -- Image pull policy
    pullPolicy: Always
    # -- Image tag
    tag: rococo-latest
  # -- Number of replicas to deploy (transaction senders)
  replicas: 1
  # -- Additional args for the transaction sender CLI
  args: []
    # node-url:  Node URL
    #--chunk-size: Chunk size for sending the extrinsics [default: 50]
    #--num: Total number of pre-funded accounts (on funded-accounts.json)

# -- Additional common labels on pods and services
extraLabels: []

# -- Service Monitor of Prometheus-Operator
# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/user-guides/getting-started.md#include-servicemonitors
serviceMonitor:
  # -- Enables Service Monitor
  enabled: false
  # -- Scrape interval
  interval: 5s
  # -- Scrape timeout
  scrapeTimeout: 5s
  # -- Labels to scrape
  targetLabels: []

# -- Annotations to add to the Pod
podAnnotations: {}

# -- SecurityContext holds pod-level security attributes and common container settings.
# This defaults to non root user with uid 1000 and gid 1000.
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
podSecurityContext:
  # -- Set container's Security Context runAsUser
  runAsUser: 1000
  # -- Set container's Security Context runAsGroup
  runAsGroup: 1000
  # -- Set container's Security Context fsGroup
  fsGroup: 1000

# -- SecurityContext settings for the main container
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- Configure Service parameters
service:
  # -- Name of the Service port
  portName: http
  # -- Service type
  type: ClusterIP # or NodePort, LoadBalancer
  # -- Port to expose the Service on
  port: 9615

# -- Resource limits & requests
resources: {}

# -- Define which Nodes the Pods are scheduled on
nodeSelector: {}

# -- Tolerations for use with node taints
tolerations: []
# -- Assign custom affinity rules
affinity: {}
