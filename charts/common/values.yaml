# -- Provide a name in place of node for `app:` labels
nameOverride: ""

# -- Provide a name to substitute for the full names of resources
fullnameOverride: ""

# -- Provide a name to substitute for the full names of resources
namespaceOverride: ""

# -- Additional common labels on resources
extraLabels: {}

# -- Image to use for the chart
image:
  # -- Image repository
  repository: nginx
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Image tag
  tag: "latest"

# -- Override default container args
args: []

# -- Override default container command
command: []

# -- Number of replicas for the pod
replicaCount: 1

# -- Reference to one or more secrets to be used when pulling images
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

# -- Define init container
# ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
# initContainers:
#   - name: init-container
#     image: busybox:1.28
#     command: ['sh', '-c', "sleep 30"]
#     volumeMounts:
#       - name: name
#         mountPath: "/path"

# -- Service account for the pod to use
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  create: true
  annotations: {}
    # uncomment if you're using workload indentity
    # iam.gke.io/gcp-service-account: 'mysa@gcp-project-id.iam.gserviceaccount.com'
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Annotations to add to the pod
podAnnotations: {}

# -- SecurityContext holds pod-level security attributes and common container settings.
# This defaults to non root user with uid 1000 and gid 1000.
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
podSecurityContext: {}
  # fsGroup: 1000
  # runAsNonRoot: true
  # runAsUser: 1000
  # runAsGroup: 1000
# -- SecurityContext settings for the main container
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  # runAsGroup: 1000

# -- Environment variable to add to the pods
env: {}
  # VAR: "value"
  # VAR2:
  #   valueFrom:
  #     secretKeyRef:
  #       key: my-key
  #       name: env-secret

# -- Environment variables from secrets or configmaps to add to the pods
envFrom: []
#  - configMapRef:
#      name: env-configmap
#  - secretRef:
#      name: env-secret


# -- Additional Pod Spec
additionalPodSpec: {}

# -- Creates a secret resource
# The value must be base64 encoded
secrets: {}
# admin: <base64-encoded>

# https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
# privateRegistry:
#  dockerconfigjson: <base64-encoded>

# -- Creates a configmap resource
config: {}

# -- Creates a service resource
service:
  # -- Annotations to add to the Service resource
  annotations: {}
  # -- Service type
  type: ClusterIP
  # -- Session Affinitiy type
  sessionAffinity: ""
  # -- Ports to expose on the service
  ports:
    # - name: http
    #   port: 80
    #   targetPort: 8080
    #   protocol: TCP
    # - name: rpc
    #   port: 9090
    #   targetPort: 9090
    #   protocol: TCP

# -- Creates an ingress resource
ingress:
  # -- Enable creation of Ingress
  enabled: false
  # -- Ingress class name
  className: ""
  # -- Annotations to add to the Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- A list of hosts for the Ingress
  rules:
    - host: chart-example.local
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            # backend:
            #   service:
            #     name: signet-frontend
            #     port:
            #       name: http
  # -- Ingress TLS configuration
  tls:
  # -- Secrets to use for TLS configuration
  - secretName: chart-example-tls
    # -- A list of hosts for the Ingress with TLS enabled
    hosts:
      - chart-example.local

# -- Resource limits & requests
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Define which Nodes the Pods are scheduled on.
nodeSelector: {}

# -- Tolerations for use with node taints
tolerations: []

# -- Assign custom affinity rules
affinity: {}

# -- Controller Container liveness probe configuration
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe: {}
  # failureThreshold: 3
  # successThreshold: 1
  # initialDelaySeconds: 0
  # timeoutSeconds: 1
  # tcpSocket:
  #   port: 80
  # periodSeconds: 10

# -- Controller Container readiness probe configuration
readinessProbe: {}
  # failureThreshold: 3
  # successThreshold: 1
  # initialDelaySeconds: 0
  # timeoutSeconds: 1
  # tcpSocket:
  #   port: 80
  # periodSeconds: 10

# -- Controller Container startup probe configuration
startupProbe: {}
  # failureThreshold: 3
  # successThreshold: 1
  # initialDelaySeconds: 0
  # timeoutSeconds: 1
  # tcpSocket:
  #   port: 80
  # periodSeconds: 10

# -- Annotations to add to the pod of statefulset
stateful:
  annotations: {}

# -- If enabled, creates a PVC and deploy the pod as statefulset
persistence:
  # -- Enable PVC creation
  enabled: false
  # -- PVC access mode
  accessModes:
  - ReadWriteOnce
  # -- PVC storage size
  size: 50Gi
  # -- Annotations to add to the PVC
  annotations: {}
  # selector:
  #   matchLabels:
  #     app.kubernetes.io/name: common
  # subPath: ""
  # existingClaim:
  # storageClassName:

# -- See `kubectl explain poddisruptionbudget.spec` for more
# ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
podDisruptionBudget: {}
  # minAvailable: 1
  # maxUnavailable: 1

# -- Autoscaling should be enabled for statefulsets
# ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
autoscaling:
  # -- Enable autoscaling
  enabled: false
  # -- Minimum number of pods
  minReplicas: 1
  # -- Maximum number of pods
  maxReplicas: 100
  # -- Target CPU utilization percentage
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- If enabled, create service monitor of Prometheus-Operator
# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/user-guides/getting-started.md#include-servicemonitors
serviceMonitor:
  # -- Enables Service Monitor
  enabled: false
  # -- Annotations to assign to the ServiceMonitor
  annotations: {}
  # -- List of endpoints of service which Prometheus scrapes
  endpoints:
  - path: /metrics
    port: http
    interval: 1m
    scheme: http
    scrapeTimeout: 30s
    honorLabels: true

  # -- Propagate certain service labels to Prometheus.
  targetLabels: []

# -- Extra volumes to be added in addition to those specified under `defaultVolumes`.
extraVolumes: []

# -- Extra volume mounts together. Corresponds to `extraVolumes`.
extraVolumeMounts: []

# -- If enabled, create cloudsql proxy resources
cloudsql:
  enabled: false
  service:
    port: 5432
    targetPort: 5432
  commandline:
    args: "-instances=gcp-project-id:zone:instance-name=tcp:0.0.0.0:5432"
