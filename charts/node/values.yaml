image:
  repository: parity/polkadot
  tag: latest
  pullPolicy: Always

initContainer:
  image:
    repository: paritytech/lz4
    tag: latest

kubectl:
  image:
    repository: bitnami/kubectl
    tag: latest

googleCloudSdk:
  image:
    repository: google/cloud-sdk
    tag: slim # more lightweight than the full image and still contains gsutil
  #serviceAccountKey: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Specifies whether a RoleBinding should be created for service account
  createRoleBinding: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podSecurityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

ingress:
  enabled: false
  annotations: {}
  #  kubernetes.io/ingress.class: nginx
  #  kubernetes.io/tls-acme: "true"
  rules: []
  #  - host: chart-example.local
  #    paths:
  #      - serviceName: node
  #        servicePort: 9944
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# Add extra labels on pods and services
#extraLabels:
#  type: rpc

node:
  chain: "polkadot"
  command: "polkadot"
  dataVolumeSize: 100Gi
  replicas: 1
  role: full
  #customChainspecUrl:
  ## Node may require custom name for chainspec file. Example: moonbeam https://github.com/PureStake/moonbeam/issues/1104#issuecomment-996787548
  ## Note: path should start with /data/ since this folder mount in init container download-chainspec.
  customChainspecPath: "/data/chainspec.json"
  forceDownloadChainspec: false
  #chainDataSnapshotUrl: "https://dot-rocksdb.polkashots.io/snapshot"
  #chainDataSnapshotFormat: lz4
  #chainPath: ""
  #chainDataKubernetesVolumeSnapshot: ""
  #chainDataGcsBucketUrl: ""
  collator:
    isParachain: false
    relayChain: polkadot
  #  relayChainCustomChainspecUrl: ""
  relayChainCustomChainspecPath: "/data/relay_chain_chainspec.json"
  #  relayChainDataSnapshotUrl: "https://dot-rocksdb.polkashots.io/snapshot"
  #  relayChainDataSnapshotFormat: lz4
  #  relayChainPath: ""
  #  relayChainDataKubernetesVolumeSnapshot: ""
  #  relayChainDataGcsBucketUrl: ""
  #  relayChainFlags:
  enableStartupProbe: true
  enableReadinessProbe: true
  flags:
    - "--rpc-external"
    - "--ws-external"
    - "--rpc-methods=safe"
    - "--rpc-cors=all"
    - "--prometheus-external"
  keys: {}
  #  - type: "gran"
  #    scheme: "ed25519"
  #    seed: "//Alice//gran"
  #  - type: "babe"
  #    scheme: "sr25519"
  #    seed: "//Alice//babe"
  vault:
    #authPath: ""
    #authRole: ""
    #authType: ""
    #authConfigType: ""
    #authConfigServiceAccount: ""
    keys: {}
      # - name: grankey
      #   type: type
      #   scheme: scheme
      #   vaultPath: kv/secret/grankey
      #   vaultKey: gran
      #   extraDerivation: //
      # - name: babekey
      #   type: type
      #   scheme: scheme
      #   vaultPath: kv/secrets/babeKey
      #   vaultKey: babe
    nodeKey: {}
      # name: nodekey
      # vaultPath: kv/secret/nodekey
      # Remark; vaultKey cannot contain dashes ('-'), only alphanumeric characters due to a limitation in the go templating
      # vaultKey: key
      # vaultKeyAppendPodIndex: false
  persistGeneratedNodeKey: false
  #customNodeKey: ""
  #  pruning: 1000
  resources: {}
  serviceMonitor:
    enabled: false
    #namespace: monitoring
    interval: 30s
    scrapeTimeout: 10s
    targetLabels:
      - node
    relabelings: []
    metricRelabelings: []
  perNodeServices:
    apiService:
      enabled: true
      type: ClusterIP # or NodePort, LoadBalancer
      annotations: {}
      httpPort: 9933
      wsPort: 9944
      prometheusPort: 9615
      externalDns:
        enabled: false
        hostname: example.com
        ttl: 300
    relayP2pService:
      enabled: false
      type: NodePort # or ClusterIP or LoadBalancer
      port: 30333
      annotations: {}
      externalDns:
        enabled: false
        hostname: example.com
        ttl: 300
    paraP2pService:
      enabled: false
      type: NodePort # or ClusterIP, LoadBalancer
      port: 30334
      annotations: {}
      externalDns:
        enabled: false
        hostname: example.com
        ttl: 300
    setPublicAddressToExternalIp:
      enabled: false
      ipRetrievalServiceUrl: https://ifconfig.io
  #podManagementPolicy: Parallel

  # Enables Jaeger Agent as a sidecar
  tracing:
    enabled: false

  # Enables Sustrate API as a sidecar
  substrateApiSidecar:
    enabled: false

# https://github.com/paritytech/substrate-api-sidecar
substrateApiSidecar:
  image:
    repository: parity/substrate-api-sidecar
    tag: latest
  env: {}
  resources: {}

# https://github.com/jaegertracing/jaeger
jaegerAgent:
  image:
    repository: jaegertracing/jaeger-agent
    tag: latest
  ports:
    # accept jaeger.thrift over compact thrift protocol
    compactPort: 6831
    # accept jaeger.thrift over binary thrift protocol
    binaryPort: 6832
    # (HTTP) serve configs, sampling strategies
    samplingPort: 5778
  collector:
    url: null
    # Jaeger Default GRPC port is 14250
    port: 14250
  env: {}
  resources: {}

podAnnotations: {}

nodeSelector: {}

terminationGracePeriodSeconds: 60

tolerations: []

affinity: {}

storageClass: "default"

extraContainers: []
