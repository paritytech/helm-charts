node:
  fullnameOverride: bootnode

  node:
    chain: rococo-local
    customChainspec: true # see extraInitContainers, chainspec-generator
    role: full
    replicas: 1
    chainData:
      pruning: archive
      storageClass: ""
    chainKeystore:
      mountInMemory:
        enabled: true
    perNodeServices:
      relayP2pService:
        enabled: true
    # to generate new key run: docker run parity/polkadot key generate-node-key
    # 12D3KooWRpzRTivvJ5ySvgbFnPeEE6rDhitQKL1fFJvvBGhnenSk
    customNodeKey: "0000000000000000000000000000000000000000000000000000000000000001"

    flags:
      - "--allow-private-ipv4"
      - "--discover-local"

  # Generate chainspec, and expose it as url
  extraInitContainers:
    - name: chainspec-generator
      image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
      securityContext:
        runAsUser: 0
      command: [ "/bin/bash" ]
      args:
        - -c
        - |
          apt update && apt install -y jq
          {{ .Values.node.command }} build-spec --chain {{ .Values.node.chain }} > base.json
          echo '{"bootNodes":["/dns/bootnode-0/tcp/30333/p2p/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp"]}' > override1.json
          jq  -s '.[0] * .[1]' base.json override1.json | sed 's/1e+18/1000000000000000000/' > plain.json
          cut -c -256 plain.json
          {{ .Values.node.command }} build-spec --chain plain.json --raw  > chainspec.json
          cp chainspec.json {{ .Values.node.customChainspecPath }}
      volumeMounts:
        - mountPath: /chain-data
          name: chain-data
  extraContainers:
    - name: chainspec
      image: nginxinc/nginx-unprivileged:stable
      ports:
        - containerPort: 8080
          name: web
      volumeMounts:
        - name: chain-data
          subPath: chainspec.json
          mountPath: /usr/share/nginx/html/chainspec.json
          readOnly: true

