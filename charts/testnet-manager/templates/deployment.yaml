{{- $fullName := include "testnet-manager.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "testnet-manager.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "testnet-manager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "testnet-manager.selectorLabels" . | nindent 8 }}
        {{- include "testnet-manager.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "testnet-manager.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/app/.venv/bin/python"]
          args: [{{ join "," .Values.args.server }}]
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          env:
          - name: NAMESPACE
            value: {{ .Release.Namespace | quote }}
          {{ if .Values.externalValidators }}
          - name: EXTERNAL_VALIDATORS_CONFIGMAP
            value: {{ include "testnet-manager.external-validators-configmap" . }}
          {{- end }}
          {{- with .Values.extraEnv }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- range $key, $value := .Values.configmap }}
          - name: {{ $key }}
            valueFrom:
              configMapKeyRef:
                name: {{ $fullName }}
                key: {{ $key }}
          {{- end }}
          {{- range $key, $value := .Values.secret }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ $fullName }}
                key: {{ $key }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}-task-scheduler
  labels:
    {{- include "testnet-manager.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "testnet-manager.taskSchedulerSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "testnet-manager.taskSchedulerSelectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "testnet-manager.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/app/.venv/bin/python"]
          args: [{{ join "," .Values.args.taskScheduler }}]
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          env:
          - name: NAMESPACE
            value: {{ .Release.Namespace | quote }}
          {{- with .Values.extraEnv }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- range $key, $value := .Values.configmap }}
          - name: {{ $key }}
            valueFrom:
              configMapKeyRef:
                name: {{ $fullName }}
                key: {{ $key }}
          {{- end }}
          {{- range $key, $value := .Values.secret }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ $fullName }}
                key: {{ $key }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
