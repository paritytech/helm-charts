name: Linting & Integration tests

on:
  pull_request:
   types:
    - opened
    - synchronize
    - reopened

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  readme-comparison:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout bitnami-labs/readme-generator-for-helm
      uses: actions/checkout@v2
      with:
        repository: 'bitnami-labs/readme-generator-for-helm'
        path: readme-generator-for-helm

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('readme-generator-for-helm/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-

    - name: Install readme-generator-for-helm dependencies
      run: cd readme-generator-for-helm && npm install
    
    - name: Checkout Charts
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        path: charts

    - name: Execute readme-generator-for-helm
      run: |
        # Using the Github API to detect the files changed as git merge-base stops working when the branch is behind
        # and jitterbit/get-changed-files does not support pull_request_target
        URL="https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files"
        files_changed_data=$(curl -s --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' -X GET -G "$URL")
        files_changed="$(echo $files_changed_data | jq -r '.[] | .filename')"
        # Adding || true to avoid "Process exited with code 1" errors
        charts_dirs_changed="$(echo "$files_changed" | xargs dirname | grep -o "charts/[^/]*" | sort | uniq || true)"
        for chart in ${charts_dirs_changed}; do
          echo "comparing README.md to values for ${chart}"
          mkdir -p /tmp/${chart}
          cp charts/${chart}/README.md /tmp/${chart}/README.md
          readme-generator-for-helm/bin/index.js --values "charts/${chart}/values.yaml" --readme "/tmp/${chart}/README.md"
          if cmp --silent -- "charts/${chart}/README.md" "/tmp/${chart}/README.md"; then
            echo "${chart}/README.md was updated per the values file prior to commit."
          else
            echo "${chart}/README.md needs updating according the values.yaml file."
            exit 1
          fi
        done

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Helm
      uses: azure/setup-helm@v1
      with:
        version: v3.8.1

    - uses: actions/setup-python@v2
      with:
        python-version: "3.10"

    - name: Set up chart-testing
      uses: helm/chart-testing-action@v2.2.1

    - name: Install additional Helm repos
      run: |
        helm repo add bitnami https://charts.bitnami.com/bitnami

    - name: Run chart-testing (list-changed)
      id: list-changed
      run: |
        changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
        if [[ -n "$changed" ]]; then
          echo "::set-output name=changed::true"
        fi

    - name: Run chart-testing (lint)
      run: |
        ct lint \
          --target-branch ${{ github.event.repository.default_branch }} \
          --lint-conf chart-testing/lintconf.yaml \
          --excluded-charts charts/common
      if: steps.list-changed.outputs.changed == 'true'

    - name: Create kind cluster
      uses: helm/kind-action@v1.2.0
      with:
        node_image: kindest/node:v1.21.10
      if: steps.list-changed.outputs.changed == 'true'

    - name: Replace secrets in Helm charts
      env:
        SMF_BOT_MATRIX_ACCESS_TOKEN: ${{ secrets.SMF_BOT_MATRIX_ACCESS_TOKEN }}
        STAKING_MINER_CONFIG_SEED: ${{ secrets.STAKING_MINER_CONFIG_SEED }}
      run: |
        shopt -s globstar
        for f in $(find **/ci/*-values.yaml); do
          sed -i "s/__GITHUB_SECRET_SMF_BOT_MATRIX_ACCESS_TOKEN/$SMF_BOT_MATRIX_ACCESS_TOKEN/g" $f
          sed -i "s/__GITHUB_SECRET_STAKING_MINER_CONFIG_SEED/$STAKING_MINER_CONFIG_SEED/g" $f
        done
      if: steps.list-changed.outputs.changed == 'true'

    - name: Run chart-testing (install)
      run: |
        ct install \
        --target-branch ${{ github.event.repository.default_branch }} \
        --excluded-charts charts/common
      if: steps.list-changed.outputs.changed == 'true'
